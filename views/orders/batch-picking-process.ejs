<!DOCTYPE html>
<html lang="de">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> | Kommissionier-App</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="/css/styles.css">
    <style>
        body {
            background: #f0f2f5;
        }

        .picking-container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 20px;
        }

        .progress-header {
            background: white;
            border-radius: 15px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            margin-bottom: 20px;
            position: sticky;
            top: 0;
            z-index: 100;
        }

        .main-content {
            display: grid;
            grid-template-columns: 2fr 1fr;
            gap: 20px;
        }

        .location-display {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 40px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 10px 30px rgba(102, 126, 234, 0.3);
        }

        .location-code {
            font-size: 5rem;
            font-weight: 700;
            letter-spacing: 5px;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.2);
            margin-bottom: 20px;
        }

        .item-card {
            background: white;
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            margin-bottom: 20px;
        }

        .item-image {
            width: 150px;
            height: 150px;
            background: #f8f9fa;
            border-radius: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 4rem;
            color: #dee2e6;
            margin-bottom: 20px;
        }

        .quantity-picker {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 20px;
            margin: 30px 0;
        }

        .qty-button {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            border: none;
            background: #e9ecef;
            font-size: 1.5rem;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s;
        }

        .qty-button:hover {
            background: #dee2e6;
            transform: scale(1.1);
        }

        .qty-button:active {
            transform: scale(0.95);
        }

        .qty-display {
            font-size: 3rem;
            font-weight: 700;
            min-width: 100px;
            text-align: center;
        }

        .order-breakdown {
            background: #f8f9fa;
            border-radius: 10px;
            padding: 15px;
            margin-top: 20px;
        }

        .order-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px;
            border-bottom: 1px solid #dee2e6;
        }

        .order-item:last-child {
            border-bottom: none;
        }

        .action-buttons {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 10px;
            margin-top: 20px;
        }

        .scan-input-container {
            background: white;
            border-radius: 15px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            margin-bottom: 20px;
        }

        .scan-input {
            font-size: 1.5rem;
            text-align: center;
            border: 3px solid #dee2e6;
            border-radius: 10px;
            padding: 15px;
            transition: all 0.3s;
        }

        .scan-input:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
        }

        .scan-input.success {
            border-color: #28a745;
            animation: pulse-success 0.5s;
        }

        .scan-input.error {
            border-color: #dc3545;
            animation: shake 0.5s;
        }

        @keyframes pulse-success {
            0% { transform: scale(1); }
            50% { transform: scale(1.05); }
            100% { transform: scale(1); }
        }

        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            25% { transform: translateX(-10px); }
            75% { transform: translateX(10px); }
        }

        .batch-info {
            background: white;
            border-radius: 15px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .timer {
            font-size: 2rem;
            font-weight: 700;
            color: #667eea;
            text-align: center;
            margin: 20px 0;
        }

        .items-timeline {
            position: relative;
            padding: 20px 0;
        }

        .timeline-item {
            position: relative;
            padding: 10px 20px;
            margin-bottom: 10px;
            background: #f8f9fa;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.3s;
        }

        .timeline-item.completed {
            background: #d4edda;
            color: #155724;
        }

        .timeline-item.current {
            background: #cfe2ff;
            color: #084298;
            border: 2px solid #0d6efd;
        }

        .timeline-item:hover {
            transform: translateX(5px);
        }

        .mobile-actions {
            position: fixed;
            bottom: 0;
            left: 0;
            right: 0;
            background: white;
            padding: 20px;
            box-shadow: 0 -2px 10px rgba(0,0,0,0.1);
            display: none;
        }

        @media (max-width: 768px) {
            .main-content {
                grid-template-columns: 1fr;
            }

            .mobile-actions {
                display: block;
            }

            .action-buttons {
                display: none;
            }

            .location-code {
                font-size: 3rem;
            }
        }

        .achievement-popup {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: white;
            padding: 40px;
            border-radius: 20px;
            box-shadow: 0 20px 60px rgba(0,0,0,0.3);
            z-index: 9999;
            display: none;
            text-align: center;
            max-width: 400px;
        }

        .achievement-popup.show {
            display: block;
            animation: bounceIn 0.6s ease;
        }

        @keyframes bounceIn {
            0% { transform: translate(-50%, -50%) scale(0); }
            60% { transform: translate(-50%, -50%) scale(1.2); }
            100% { transform: translate(-50%, -50%) scale(1); }
        }
    </style>
</head>
<body>
<div class="picking-container">
    <!-- Progress Header -->
    <div class="progress-header">
        <div class="row align-items-center">
            <div class="col-md-4">
                <h4 class="mb-0">
                    <i class="fas fa-layer-group"></i> Batch <%= batch.id %>
                </h4>
                <small class="text-muted"><%= batch.type %> - <%= batch.totalOrders %> Auftr√§ge</small>
            </div>
            <div class="col-md-4">
                <div class="progress" style="height: 30px;">
                    <div class="progress-bar progress-bar-striped progress-bar-animated"
                         role="progressbar"
                         style="width: <%= progress %>%"
                         aria-valuenow="<%= progress %>"
                         aria-valuemin="0"
                         aria-valuemax="100">
                        <%= progress %>%
                    </div>
                </div>
                <small class="text-muted text-center d-block mt-1">
                    Position <%= batch.currentItemIndex + 1 %> von <%= batch.items.length %>
                </small>
            </div>
            <div class="col-md-4 text-end">
                <div class="timer" id="timer">00:00</div>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <div class="main-content">
        <!-- Left Column: Current Item -->
        <div>
            <!-- Scan Input -->
            <div class="scan-input-container">
                <label class="form-label text-center d-block mb-3">
                    <i class="fas fa-barcode"></i> Barcode scannen oder manuell eingeben
                </label>
                <input type="text"
                       id="scanInput"
                       class="form-control scan-input"
                       placeholder="Bereit zum Scannen..."
                       autofocus>
            </div>

            <% if (currentItem) { %>
                <!-- Location Display -->
                <div class="location-display">
                    <div class="location-code">
                        <%= currentItem.location %>
                    </div>
                    <p class="mb-0 fs-5">Lagerplatz</p>
                </div>

                <!-- Item Details -->
                <div class="item-card">
                    <div class="row">
                        <div class="col-md-3 text-center">
                            <div class="item-image">
                                <i class="fas fa-box"></i>
                            </div>
                        </div>
                        <div class="col-md-9">
                            <h3><%= currentItem.sku %></h3>
                            <p class="fs-5 mb-3"><%= currentItem.description %></p>

                            <div class="d-flex gap-4 mb-3">
                                <div>
                                    <small class="text-muted">Artikelnummer</small>
                                    <div class="fw-bold"><%= currentItem.articleNumber %></div>
                                </div>
                                <div>
                                    <small class="text-muted">Einheit</small>
                                    <div class="fw-bold"><%= currentItem.unit %></div>
                                </div>
                                <div>
                                    <small class="text-muted">Gewicht</small>
                                    <div class="fw-bold"><%= currentItem.weight || '0.5' %> kg</div>
                                </div>
                            </div>

                            <!-- Quantity Picker -->
                            <div class="quantity-picker">
                                <button class="qty-button" onclick="decreaseQty()">
                                    <i class="fas fa-minus"></i>
                                </button>
                                <div class="qty-display" id="qtyDisplay">
                                    <%= currentItem.totalQuantity %>
                                </div>
                                <button class="qty-button" onclick="increaseQty()">
                                    <i class="fas fa-plus"></i>
                                </button>
                            </div>

                            <div class="text-center">
                                <div class="badge bg-primary fs-6">
                                    Gesamt ben√∂tigt: <%= currentItem.totalQuantity %> <%= currentItem.unit %>
                                </div>
                            </div>

                            <!-- Order Breakdown -->
                            <div class="order-breakdown">
                                <h6 class="mb-3">Aufteilung auf Auftr√§ge:</h6>
                                <% currentItem.orderBreakdown.forEach(order => { %>
                                    <div class="order-item">
                                        <div>
                                            <strong>LS <%= order.deliveryNote %></strong>
                                            <% if (order.customer) { %>
                                                <br><small class="text-muted"><%= order.customer %></small>
                                            <% } %>
                                        </div>
                                        <div class="badge bg-secondary">
                                            <%= order.quantity %> <%= currentItem.unit %>
                                        </div>
                                    </div>
                                <% }) %>
                            </div>

                            <!-- Action Buttons -->
                            <div class="action-buttons">
                                <button class="btn btn-success btn-lg" onclick="confirmPick()">
                                    <i class="fas fa-check"></i> Best√§tigen
                                </button>
                                <button class="btn btn-warning btn-lg" onclick="skipItem()">
                                    <i class="fas fa-forward"></i> √úberspringen
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            <% } else { %>
                <!-- Batch Complete -->
                <div class="item-card text-center py-5">
                    <i class="fas fa-check-circle fa-5x text-success mb-4"></i>
                    <h2>Batch abgeschlossen!</h2>
                    <p class="fs-5 mb-4">
                        Alle Artikel wurden erfolgreich kommissioniert.
                    </p>
                    <button class="btn btn-success btn-lg" onclick="completeBatch()">
                        <i class="fas fa-flag-checkered"></i> Batch beenden
                    </button>
                </div>
            <% } %>
        </div>

        <!-- Right Column: Batch Info & Timeline -->
        <div>
            <!-- Batch Info -->
            <div class="batch-info mb-4">
                <h5 class="mb-3">
                    <i class="fas fa-info-circle"></i> Batch-Informationen
                </h5>
                <table class="table table-sm">
                    <tr>
                        <td>Batch-ID:</td>
                        <td class="fw-bold"><%= batch.id %></td>
                    </tr>
                    <tr>
                        <td>Typ:</td>
                        <td class="fw-bold"><%= batch.type %></td>
                    </tr>
                    <tr>
                        <td>Auftr√§ge:</td>
                        <td class="fw-bold"><%= batch.totalOrders %></td>
                    </tr>
                    <tr>
                        <td>Artikel gesamt:</td>
                        <td class="fw-bold"><%= batch.totalItems %></td>
                    </tr>
                    <tr>
                        <td>Kommissionierer:</td>
                        <td class="fw-bold"><%= user.name %></td>
                    </tr>
                </table>

                <div class="d-grid gap-2 mt-3">
                    <button class="btn btn-outline-danger btn-sm" onclick="pauseBatch()">
                        <i class="fas fa-pause"></i> Pausieren
                    </button>
                </div>
            </div>

            <!-- Items Timeline -->
            <div class="batch-info">
                <h5 class="mb-3">
                    <i class="fas fa-tasks"></i> Artikel-√úbersicht
                </h5>
                <div class="items-timeline">
                    <% batch.items.forEach((item, index) => { %>
                        <div class="timeline-item <%= index < batch.currentItemIndex ? 'completed' : '' %> <%= index === batch.currentItemIndex ? 'current' : '' %>"
                             onclick="jumpToItem(<%= index %>)">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <strong><%= item.location %></strong> - <%= item.sku %>
                                    <br>
                                    <small><%= item.totalQuantity %> <%= item.unit %></small>
                                </div>
                                <div>
                                    <% if (index < batch.currentItemIndex) { %>
                                        <i class="fas fa-check-circle text-success"></i>
                                    <% } else if (index === batch.currentItemIndex) { %>
                                        <i class="fas fa-arrow-right text-primary"></i>
                                    <% } %>
                                </div>
                            </div>
                        </div>
                    <% }) %>
                </div>
            </div>
        </div>
    </div>

    <!-- Mobile Actions -->
    <div class="mobile-actions">
        <div class="d-grid gap-2">
            <button class="btn btn-success btn-lg" onclick="confirmPick()">
                <i class="fas fa-check"></i> Best√§tigen
            </button>
            <button class="btn btn-warning" onclick="skipItem()">
                <i class="fas fa-forward"></i> √úberspringen
            </button>
        </div>
    </div>
</div>

<!-- Achievement Popup -->
<div class="achievement-popup" id="achievementPopup">
    <div class="achievement-icon" style="font-size: 4rem;">üèÜ</div>
    <h3 class="achievement-title mb-3">Meilenstein erreicht!</h3>
    <p class="achievement-text mb-4"></p>
    <button class="btn btn-primary" onclick="closeAchievement()">Weiter so!</button>
</div>

<!-- Audio Elements -->
<audio id="scanSuccessSound" preload="auto">
    <source src="data:audio/wav;base64,UklGRnoGAABXQVZFZm10IBAAAAABAAEARKwAAIhYAQABAAgAZGF0YQAAAAAA" type="audio/wav">
</audio>
<audio id="scanErrorSound" preload="auto">
    <source src="data:audio/wav;base64,UklGRnoGAABXQVZFZm10IBAAAAABAAEARKwAAIhYAQABAAgAZGF0YQAAAAAA" type="audio/wav">
</audio>

<script>
    const batchId = '<%= batch.id %>';
    const currentItemIndex = <%= batch.currentItemIndex %>;
    const totalItems = <%= batch.items.length %>;
    let currentQuantity = <%= currentItem ? currentItem.totalQuantity : 0 %>;
    let startTime = new Date('<%= batch.startTime %>');
    let timerInterval;
    let scanBuffer = '';
    let lastScanTime = 0;

    // Initialize
    document.addEventListener('DOMContentLoaded', function() {
        startTimer();
        setupScanner();
        checkMilestones();
    });

    // Timer
    function startTimer() {
        timerInterval = setInterval(updateTimer, 1000);
        updateTimer();
    }

    function updateTimer() {
        const now = new Date();
        const elapsed = Math.floor((now - startTime) / 1000);
        const minutes = Math.floor(elapsed / 60);
        const seconds = elapsed % 60;
        document.getElementById('timer').textContent =
            `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
    }

    // Scanner Setup
    function setupScanner() {
        const scanInput = document.getElementById('scanInput');

        scanInput.addEventListener('input', handleScanInput);
        scanInput.addEventListener('keypress', handleKeyPress);

        // Auto-focus
        setInterval(() => {
            if (document.activeElement !== scanInput && !document.querySelector('.modal.show')) {
                scanInput.focus();
            }
        }, 1000);
    }

    function handleScanInput(e) {
        const now = Date.now();

        if (now - lastScanTime > 100) {
            scanBuffer = '';
        }

        scanBuffer += e.data || '';
        lastScanTime = now;
    }

    function handleKeyPress(e) {
        if (e.key === 'Enter') {
            e.preventDefault();
            const value = e.target.value || scanBuffer;
            processScan(value);
            e.target.value = '';
            scanBuffer = '';
        }
    }

    function processScan(code) {
        const scanInput = document.getElementById('scanInput');

        // Validate scan
        <% if (currentItem) { %>
        const expectedCodes = [
            '<%= currentItem.sku %>',
            '<%= currentItem.articleNumber %>',
            '<%= currentItem.barcode || "" %>',
            '<%= currentItem.ean || "" %>'
        ].filter(c => c);

        if (expectedCodes.some(expected =>
            code.toLowerCase() === expected.toLowerCase() ||
            code.includes(expected) ||
            expected.includes(code)
        )) {
            // Success
            scanInput.classList.add('success');
            playSound('success');
            setTimeout(() => {
                confirmPick();
            }, 500);
        } else {
            // Error
            scanInput.classList.add('error');
            playSound('error');
            showNotification('Falscher Artikel gescannt!', 'error');
        }

        setTimeout(() => {
            scanInput.classList.remove('success', 'error');
        }, 1000);
        <% } %>
    }

    // Quantity Controls
    function decreaseQty() {
        if (currentQuantity > 1) {
            currentQuantity--;
            updateQtyDisplay();
        }
    }

    function increaseQty() {
        currentQuantity++;
        updateQtyDisplay();
    }

    function updateQtyDisplay() {
        document.getElementById('qtyDisplay').textContent = currentQuantity;
    }

    // Actions
    async function confirmPick() {
        try {
            const response = await fetch(`/orders/batch/${batchId}/pick`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    quantity: currentQuantity,
                    itemIndex: currentItemIndex
                })
            });

            const result = await response.json();

            if (result.success) {
                if (result.isComplete) {
                    // Batch complete
                    location.reload();
                } else {
                    // Next item
                    showNotification('Artikel kommissioniert!', 'success');
                    setTimeout(() => {
                        location.href = `/orders/batch/${batchId}?item=${currentItemIndex + 1}`;
                    }, 1000);
                }
            } else {
                showNotification('Fehler: ' + result.error, 'error');
            }
        } catch (error) {
            console.error('Fehler:', error);
            showNotification('Verbindungsfehler', 'error');
        }
    }

    function skipItem() {
        if (confirm('Artikel wirklich √ºberspringen?')) {
            location.href = `/orders/batch/${batchId}?item=${currentItemIndex + 1}`;
        }
    }

    async function completeBatch() {
        if (!confirm('Batch wirklich abschlie√üen?')) return;

        try {
            const response = await fetch(`/orders/batch/${batchId}/complete`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                }
            });

            const result = await response.json();

            if (result.success) {
                showAchievement(
                    'üéâ',
                    'Batch abgeschlossen!',
                    `${result.performance.itemCount} Artikel in ${Math.round(result.performance.duration / 60000)} Minuten`
                );

                setTimeout(() => {
                    location.href = result.redirect || '/orders/batch-pick';
                }, 3000);
            }
        } catch (error) {
            console.error('Fehler:', error);
            showNotification('Fehler beim Abschlie√üen', 'error');
        }
    }

    function pauseBatch() {
        if (confirm('Batch pausieren und sp√§ter fortsetzen?')) {
            location.href = '/orders/batch-pick';
        }
    }

    function jumpToItem(index) {
        // Nur zu bereits bearbeiteten Items springen
        if (index < currentItemIndex) {
            location.href = `/orders/batch/${batchId}?item=${index}`;
        }
    }

    // Helpers
    function playSound(type) {
        const audio = document.getElementById(type === 'success' ? 'scanSuccessSound' : 'scanErrorSound');
        audio.currentTime = 0;
        audio.play().catch(() => {});
    }

    function showNotification(message, type) {
        // Simple notification - could be replaced with toast
        const alertClass = type === 'success' ? 'alert-success' : 'alert-danger';
        const icon = type === 'success' ? 'check-circle' : 'exclamation-circle';

        const notification = document.createElement('div');
        notification.className = `alert ${alertClass} position-fixed top-0 start-50 translate-middle-x mt-3`;
        notification.style.zIndex = '9999';
        notification.innerHTML = `<i class="fas fa-${icon}"></i> ${message}`;

        document.body.appendChild(notification);

        setTimeout(() => {
            notification.remove();
        }, 3000);
    }

    function checkMilestones() {
        const itemsCompleted = currentItemIndex;
        const milestones = [10, 25, 50, 100, 200, 500];

        for (const milestone of milestones) {
            if (itemsCompleted === milestone) {
                showAchievement(
                    'üèÜ',
                    `${milestone} Artikel!`,
                    'Gro√üartige Leistung!'
                );
                break;
            }
        }
    }

    function showAchievement(icon, title, text) {
        const popup = document.getElementById('achievementPopup');
        popup.querySelector('.achievement-icon').textContent = icon;
        popup.querySelector('.achievement-title').textContent = title;
        popup.querySelector('.achievement-text').textContent = text;
        popup.classList.add('show');

        playSound('success');
    }

    function closeAchievement() {
        document.getElementById('achievementPopup').classList.remove('show');
    }

    // Keyboard shortcuts
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Enter' && e.ctrlKey) {
            e.preventDefault();
            confirmPick();
        }

        if (e.key === 'F9') {
            e.preventDefault();
            skipItem();
        }

        if (e.key === '+' && !e.target.matches('input')) {
            e.preventDefault();
            increaseQty();
        }

        if (e.key === '-' && !e.target.matches('input')) {
            e.preventDefault();
            decreaseQty();
        }
    });
</script>
</body>
</html>