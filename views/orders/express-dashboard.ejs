<!DOCTYPE html>
<html lang="de">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> | Kommissionier-App</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="/css/styles.css">
    <style>
        .express-header {
            background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);
            color: white;
            padding: 30px;
            border-radius: 15px;
            margin-bottom: 30px;
            position: relative;
            overflow: hidden;
        }

        .express-header::before {
            content: '';
            position: absolute;
            top: -50%;
            right: -50%;
            width: 200%;
            height: 200%;
            background: repeating-linear-gradient(
                    45deg,
                    transparent,
                    transparent 10px,
                    rgba(255,255,255,0.1) 10px,
                    rgba(255,255,255,0.1) 20px
            );
            animation: stripes 20s linear infinite;
        }

        @keyframes stripes {
            0% { transform: translateX(0); }
            100% { transform: translateX(50px); }
        }

        .deadline-timer {
            font-size: 3rem;
            font-weight: 700;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.2);
        }

        .order-card {
            border-radius: 10px;
            margin-bottom: 20px;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .order-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 20px rgba(0,0,0,0.1);
        }

        .order-card.critical {
            border-left: 5px solid #dc3545;
            animation: pulse-border 2s infinite;
        }

        .order-card.urgent {
            border-left: 5px solid #ffc107;
        }

        .order-card.normal {
            border-left: 5px solid #28a745;
        }

        @keyframes pulse-border {
            0% { box-shadow: 0 0 0 0 rgba(220, 53, 69, 0.4); }
            70% { box-shadow: 0 0 0 10px rgba(220, 53, 69, 0); }
            100% { box-shadow: 0 0 0 0 rgba(220, 53, 69, 0); }
        }

        .countdown-badge {
            position: absolute;
            top: 15px;
            right: 15px;
            font-size: 1.2rem;
            font-weight: bold;
            padding: 10px 15px;
            border-radius: 25px;
            min-width: 100px;
            text-align: center;
        }

        .countdown-badge.critical {
            background: #dc3545;
            color: white;
            animation: blink 1s infinite;
        }

        .countdown-badge.urgent {
            background: #ffc107;
            color: #000;
        }

        .countdown-badge.normal {
            background: #28a745;
            color: white;
        }

        @keyframes blink {
            0%, 50% { opacity: 1; }
            51%, 100% { opacity: 0.5; }
        }

        .priority-indicator {
            width: 100%;
            height: 4px;
            background: #e9ecef;
            border-radius: 2px;
            overflow: hidden;
            margin-top: 10px;
        }

        .priority-bar {
            height: 100%;
            background: #dc3545;
            transition: width 0.3s ease;
        }

        .item-preview {
            display: flex;
            gap: 10px;
            margin-top: 15px;
            padding-top: 15px;
            border-top: 1px solid #e9ecef;
        }

        .item-badge {
            background: #f8f9fa;
            padding: 5px 10px;
            border-radius: 5px;
            font-size: 0.9rem;
        }

        .quick-action-bar {
            position: sticky;
            top: 0;
            background: white;
            padding: 15px 0;
            margin-bottom: 20px;
            z-index: 100;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }

        .filter-pills {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }

        .filter-pill {
            padding: 8px 20px;
            border-radius: 25px;
            background: #f8f9fa;
            border: 2px solid transparent;
            cursor: pointer;
            transition: all 0.3s;
        }

        .filter-pill:hover {
            background: #e9ecef;
        }

        .filter-pill.active {
            background: #0d6efd;
            color: white;
            border-color: #0d6efd;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background: white;
            padding: 20px;
            border-radius: 10px;
            text-align: center;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        }

        .stat-value {
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 5px;
        }

        .stat-label {
            color: #6c757d;
            font-size: 0.9rem;
            text-transform: uppercase;
        }

        .action-required {
            background: #fff3cd;
            border: 1px solid #ffeaa7;
            border-radius: 10px;
            padding: 15px;
            margin-bottom: 20px;
        }

        .timeline-indicator {
            position: relative;
            padding-left: 30px;
        }

        .timeline-dot {
            position: absolute;
            left: 0;
            top: 5px;
            width: 20px;
            height: 20px;
            border-radius: 50%;
            background: #dc3545;
            animation: pulse-dot 2s infinite;
        }

        @keyframes pulse-dot {
            0% { transform: scale(1); opacity: 1; }
            50% { transform: scale(1.2); opacity: 0.7; }
            100% { transform: scale(1); opacity: 1; }
        }

        @media (max-width: 768px) {
            .deadline-timer {
                font-size: 2rem;
            }

            .countdown-badge {
                font-size: 1rem;
                padding: 5px 10px;
                min-width: 80px;
            }
        }
    </style>
</head>
<body>
<%- include('../partials/navbar') %>

<div class="container mt-4">
    <!-- Express Header -->
    <div class="express-header">
        <div class="row align-items-center">
            <div class="col-md-8">
                <h1 class="mb-3">
                    <i class="fas fa-rocket"></i> Express-Aufträge Dashboard
                </h1>
                <p class="lead mb-0">Zeitkritische Aufträge mit Priorität</p>
            </div>
            <div class="col-md-4 text-center">
                <div class="deadline-timer" id="mainTimer">14:00</div>
                <p class="mb-0">Uhr - Express-Deadline</p>
            </div>
        </div>
    </div>

    <!-- Stats Grid -->
    <div class="stats-grid">
        <div class="stat-card">
            <div class="stat-value text-danger"><%= orders.filter(o => o.isCritical).length %></div>
            <div class="stat-label">Kritisch (< 1h)</div>
        </div>
        <div class="stat-card">
            <div class="stat-value text-warning"><%= orders.filter(o => o.isUrgent && !o.isCritical).length %></div>
            <div class="stat-label">Dringend (< 2h)</div>
        </div>
        <div class="stat-card">
            <div class="stat-value text-success"><%= orders.filter(o => !o.isUrgent).length %></div>
            <div class="stat-label">Normal (> 2h)</div>
        </div>
        <div class="stat-card">
            <div class="stat-value text-primary"><%= orders.length %></div>
            <div class="stat-label">Gesamt Express</div>
        </div>
    </div>

    <!-- Action Required Alert -->
    <% if (orders.some(o => o.isCritical)) { %>
        <div class="action-required">
            <div class="d-flex align-items-center gap-3">
                <i class="fas fa-exclamation-triangle fa-2x text-warning"></i>
                <div class="flex-grow-1">
                    <h5 class="mb-1">Sofortiges Handeln erforderlich!</h5>
                    <p class="mb-0">
                        <%= orders.filter(o => o.isCritical).length %> Aufträge haben ihre Deadline in weniger als 1 Stunde.
                    </p>
                </div>
                <a href="/orders/batch-pick" class="btn btn-warning">
                    <i class="fas fa-play"></i> Batch starten
                </a>
            </div>
        </div>
    <% } %>

    <!-- Quick Action Bar -->
    <div class="quick-action-bar">
        <div class="d-flex justify-content-between align-items-center">
            <div class="filter-pills">
                <div class="filter-pill active" data-filter="all">
                    Alle (<%= orders.length %>)
                </div>
                <div class="filter-pill" data-filter="critical">
                    Kritisch (<%= orders.filter(o => o.isCritical).length %>)
                </div>
                <div class="filter-pill" data-filter="urgent">
                    Dringend (<%= orders.filter(o => o.isUrgent && !o.isCritical).length %>)
                </div>
                <div class="filter-pill" data-filter="assigned">
                    Zugewiesen (<%= orders.filter(o => o.assignedTo).length %>)
                </div>
            </div>
            <button class="btn btn-primary" onclick="refreshData()">
                <i class="fas fa-sync"></i> Aktualisieren
            </button>
        </div>
    </div>

    <!-- Orders List -->
    <div class="row" id="ordersList">
        <% orders.forEach(order => { %>
            <div class="col-lg-6 order-item"
                 data-priority="<%= order.isCritical ? 'critical' : order.isUrgent ? 'urgent' : 'normal' %>"
                 data-assigned="<%= order.assignedTo ? 'true' : 'false' %>">

                <div class="card order-card <%= order.isCritical ? 'critical' : order.isUrgent ? 'urgent' : 'normal' %>">
                    <div class="card-body">
                        <!-- Countdown Badge -->
                        <div class="countdown-badge <%= order.isCritical ? 'critical' : order.isUrgent ? 'urgent' : 'normal' %>">
                            <% if (order.remainingMinutes < 60) { %>
                                <%= order.remainingMinutes %> Min
                            <% } else { %>
                                <%= order.remainingHours %>h <%= order.remainingMinutes % 60 %>m
                            <% } %>
                        </div>

                        <!-- Order Header -->
                        <div class="d-flex justify-content-between align-items-start mb-3">
                            <div>
                                <h5 class="mb-1">
                                    <a href="/orders/<%= order._id %>" class="text-decoration-none text-dark">
                                        <%= order.deliveryNoteNumber %>
                                    </a>
                                </h5>
                                <% if (order.orderNumber) { %>
                                    <small class="text-muted">Auftrag: <%= order.orderNumber %></small>
                                <% } %>
                            </div>
                            <% if (order.assignedTo) { %>
                                <span class="badge bg-info">
                                    <i class="fas fa-user"></i> <%= order.assignedTo.name %>
                                </span>
                            <% } %>
                        </div>

                        <!-- Customer Info -->
                        <div class="mb-3">
                            <% if (order.customer && order.customer.name) { %>
                                <strong><%= order.customer.name %></strong><br>
                                <small class="text-muted">
                                    <%= order.customer.city || '' %>
                                    <%= order.customer.country || '' %>
                                </small>
                            <% } %>
                        </div>

                        <!-- Shipping Info -->
                        <div class="d-flex gap-3 mb-3">
                            <div>
                                <small class="text-muted">Versandart</small><br>
                                <span class="badge bg-danger">
                                    <i class="fas fa-shipping-fast"></i>
                                    <%= order.shippingMethod?.name || 'Express' %>
                                </span>
                            </div>
                            <% if (order.shippingDeadline) { %>
                                <div>
                                    <small class="text-muted">Deadline</small><br>
                                    <strong><%= order.shippingDeadline.toLocaleTimeString('de-DE', { hour: '2-digit', minute: '2-digit' }) %></strong>
                                </div>
                            <% } %>
                        </div>

                        <!-- Priority Indicator -->
                        <div class="priority-indicator">
                            <div class="priority-bar" style="width: <%= Math.max(10, 100 - (order.remainingHours * 25)) %>%"></div>
                        </div>

                        <!-- Items Preview -->
                        <div class="item-preview">
                            <% order.items.slice(0, 3).forEach(item => { %>
                                <div class="item-badge">
                                    <%= item.sku || item.articleNumber %>
                                    <strong>×<%= item.quantity %></strong>
                                </div>
                            <% }) %>
                            <% if (order.items.length > 3) { %>
                                <div class="item-badge">
                                    +<%= order.items.length - 3 %> weitere
                                </div>
                            <% } %>
                        </div>

                        <!-- Action Buttons -->
                        <div class="mt-3 d-flex gap-2">
                            <% if (order.status === 'new') { %>
                                <button class="btn btn-sm btn-primary flex-grow-1"
                                        onclick="startOrder('<%= order._id %>')">
                                    <i class="fas fa-play"></i> Starten
                                </button>
                            <% } else if (order.status === 'in_progress') { %>
                                <a href="/orders/<%= order._id %>"
                                   class="btn btn-sm btn-warning flex-grow-1">
                                    <i class="fas fa-box-open"></i> Fortsetzen
                                </a>
                            <% } %>
                            <button class="btn btn-sm btn-outline-secondary"
                                    onclick="showOrderDetails('<%= order._id %>')">
                                <i class="fas fa-info-circle"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        <% }) %>

        <% if (orders.length === 0) { %>
            <div class="col-12">
                <div class="card">
                    <div class="card-body text-center py-5">
                        <i class="fas fa-check-circle fa-4x text-success mb-3"></i>
                        <h4>Keine Express-Aufträge vorhanden</h4>
                        <p class="text-muted">Alle zeitkritischen Aufträge wurden bearbeitet.</p>
                        <a href="/orders" class="btn btn-primary">
                            <i class="fas fa-list"></i> Alle Aufträge anzeigen
                        </a>
                    </div>
                </div>
            </div>
        <% } %>
    </div>
</div>

<!-- Order Details Modal -->
<div class="modal fade" id="orderDetailsModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Auftragsdetails</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="orderDetailsContent">
                <!-- Wird dynamisch gefüllt -->
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
    let countdownInterval;
    let refreshInterval;

    // Initialize
    document.addEventListener('DOMContentLoaded', function() {
        startCountdown();
        setupFilters();
        startAutoRefresh();
        updateTimeDisplay();
    });

    // Main countdown timer
    function startCountdown() {
        updateMainTimer();
        setInterval(updateMainTimer, 1000);
    }

    function updateMainTimer() {
        const now = new Date();
        const deadline = new Date();
        deadline.setHours(14, 0, 0, 0);

        if (deadline < now) {
            deadline.setDate(deadline.getDate() + 1);
        }

        const diff = deadline - now;
        const hours = Math.floor(diff / (1000 * 60 * 60));
        const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));

        document.getElementById('mainTimer').textContent =
            `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}`;
    }

    // Update individual order times
    function updateTimeDisplay() {
        document.querySelectorAll('.countdown-badge').forEach(badge => {
            // Animation für kritische Aufträge
            if (badge.classList.contains('critical')) {
                badge.style.transform = 'scale(1.1)';
                setTimeout(() => {
                    badge.style.transform = 'scale(1)';
                }, 500);
            }
        });
    }

    // Filter functionality
    function setupFilters() {
        document.querySelectorAll('.filter-pill').forEach(pill => {
            pill.addEventListener('click', function() {
                // Update active state
                document.querySelectorAll('.filter-pill').forEach(p => p.classList.remove('active'));
                this.classList.add('active');

                // Apply filter
                const filter = this.dataset.filter;
                filterOrders(filter);
            });
        });
    }

    function filterOrders(filter) {
        const orders = document.querySelectorAll('.order-item');

        orders.forEach(order => {
            let show = false;

            switch(filter) {
                case 'all':
                    show = true;
                    break;
                case 'critical':
                    show = order.dataset.priority === 'critical';
                    break;
                case 'urgent':
                    show = order.dataset.priority === 'urgent';
                    break;
                case 'assigned':
                    show = order.dataset.assigned === 'true';
                    break;
            }

            order.style.display = show ? 'block' : 'none';
        });
    }

    // Start order with auto-pack
    async function startOrder(orderId) {
        if (!confirm('Express-Auftrag jetzt starten?')) return;

        try {
            const response = await fetch(`/orders/${orderId}/auto-pack`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                }
            });

            const result = await response.json();

            if (result.success) {
                window.location.href = `/orders/${orderId}`;
            } else {
                alert('Fehler: ' + result.error);
            }
        } catch (error) {
            console.error('Fehler beim Starten:', error);
            alert('Fehler beim Starten des Auftrags');
        }
    }

    // Show order details
    async function showOrderDetails(orderId) {
        try {
            const response = await fetch(`/orders/${orderId}`, {
                headers: {
                    'Accept': 'application/json'
                }
            });

            if (!response.ok) throw new Error('Fehler beim Laden');

            // For now, just redirect
            window.location.href = `/orders/${orderId}`;

        } catch (error) {
            console.error('Fehler:', error);
            alert('Fehler beim Laden der Details');
        }
    }

    // Auto refresh
    function startAutoRefresh() {
        refreshInterval = setInterval(() => {
            if (!document.querySelector('.modal.show')) {
                refreshData();
            }
        }, 60000); // Jede Minute
    }

    function refreshData() {
        // Visual feedback
        const btn = document.querySelector('button[onclick="refreshData()"] i');
        if (btn) {
            btn.classList.add('fa-spin');
            setTimeout(() => {
                location.reload();
            }, 500);
        }
    }

    // Keyboard shortcuts
    document.addEventListener('keydown', function(e) {
        if (e.key === 'F5') {
            e.preventDefault();
            refreshData();
        }

        if (e.ctrlKey && e.key === 'b') {
            e.preventDefault();
            window.location.href = '/orders/batch-pick';
        }
    });

    // Notification for new critical orders
    setInterval(() => {
        const criticalCount = document.querySelectorAll('.order-card.critical').length;
        if (criticalCount > 0 && document.hidden) {
            // Browser notification if page is not visible
            if (Notification.permission === 'granted') {
                new Notification('Kritische Express-Aufträge!', {
                    body: `${criticalCount} Aufträge benötigen sofortige Bearbeitung`,
                    icon: '/favicon.ico'
                });
            }
        }
    }, 30000);

    // Request notification permission
    if ('Notification' in window && Notification.permission === 'default') {
        Notification.requestPermission();
    }
</script>
</body>
</html>