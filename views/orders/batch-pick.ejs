<!DOCTYPE html>
<html lang="de">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> | Kommissionier-App</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="/css/styles.css">
    <style>
        .batch-card {
            border-radius: 15px;
            transition: all 0.3s ease;
            cursor: pointer;
            overflow: hidden;
        }

        .batch-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 30px rgba(0,0,0,0.15);
        }

        .batch-card.express {
            border-left: 5px solid #dc3545;
        }

        .batch-card.singleItem {
            border-left: 5px solid #28a745;
        }

        .batch-card.multiItem {
            border-left: 5px solid #0d6efd;
        }

        .batch-card.bulky {
            border-left: 5px solid #ffc107;
        }

        .batch-icon {
            font-size: 3rem;
            opacity: 0.8;
        }

        .batch-stats {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 10px;
            margin-top: 15px;
        }

        .stat-item {
            background: #f8f9fa;
            padding: 10px;
            border-radius: 8px;
            text-align: center;
        }

        .stat-value {
            font-size: 1.5rem;
            font-weight: bold;
            color: #333;
        }

        .stat-label {
            font-size: 0.8rem;
            color: #6c757d;
            text-transform: uppercase;
        }

        .order-preview {
            max-height: 150px;
            overflow-y: auto;
            margin-top: 15px;
            padding: 10px;
            background: #f8f9fa;
            border-radius: 8px;
            font-size: 0.9rem;
        }

        .create-batch-btn {
            position: fixed;
            bottom: 30px;
            right: 30px;
            width: 60px;
            height: 60px;
            border-radius: 50%;
            background: #0d6efd;
            color: white;
            border: none;
            box-shadow: 0 4px 15px rgba(13, 110, 253, 0.4);
            z-index: 1000;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
        }

        .create-batch-btn:hover {
            transform: scale(1.1);
            box-shadow: 0 6px 20px rgba(13, 110, 253, 0.5);
        }

        .selection-mode {
            position: sticky;
            top: 0;
            background: #0d6efd;
            color: white;
            padding: 15px;
            z-index: 999;
            display: none;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .selection-mode.active {
            display: block;
        }

        .batch-card.selected {
            background: #e7f3ff;
            border-color: #0d6efd;
        }

        .quick-stats {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 30px;
            border-radius: 15px;
            margin-bottom: 30px;
        }

        .loading-skeleton {
            background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
            background-size: 200% 100%;
            animation: loading 1.5s infinite;
        }

        @keyframes loading {
            0% { background-position: 200% 0; }
            100% { background-position: -200% 0; }
        }
    </style>
</head>
<body>
<%- include('../partials/navbar') %>

<div class="container mt-4">
    <!-- Selection Mode Bar -->
    <div class="selection-mode" id="selectionMode">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h5 class="mb-0">
                    <i class="fas fa-check-square"></i>
                    <span id="selectedCount">0</span> Aufträge ausgewählt
                </h5>
            </div>
            <div>
                <button class="btn btn-light btn-sm me-2" onclick="cancelSelection()">
                    <i class="fas fa-times"></i> Abbrechen
                </button>
                <button class="btn btn-success" onclick="createCustomBatch()">
                    <i class="fas fa-play"></i> Batch starten
                </button>
            </div>
        </div>
    </div>

    <!-- Quick Stats -->
    <div class="quick-stats">
        <div class="row text-center">
            <div class="col-md-3">
                <div class="stat-value display-4"><%= totalOrders %></div>
                <div class="stat-label">Offene Aufträge</div>
            </div>
            <div class="col-md-3">
                <div class="stat-value display-4">
                    <%= batches.find(b => b.type === 'express')?.orders.length || 0 %>
                </div>
                <div class="stat-label">Express-Aufträge</div>
            </div>
            <div class="col-md-3">
                <div class="stat-value display-4">
                    <%= stats.reduce((sum, s) => sum + s.itemCount, 0) %>
                </div>
                <div class="stat-label">Zu kommissionieren</div>
            </div>
            <div class="col-md-3">
                <div class="stat-value display-4">
                    <%= Math.ceil(stats.reduce((sum, s) => sum + s.estimatedTime, 0) / 60) %>h
                </div>
                <div class="stat-label">Geschätzte Zeit</div>
            </div>
        </div>
    </div>

    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2><i class="fas fa-layer-group"></i> <%= title %></h2>
        <div>
            <button class="btn btn-outline-primary me-2" onclick="toggleSelectionMode()">
                <i class="fas fa-hand-pointer"></i> Auswahl-Modus
            </button>
            <a href="/orders" class="btn btn-outline-secondary">
                <i class="fas fa-list"></i> Einzelansicht
            </a>
        </div>
    </div>

    <!-- Batches Grid -->
    <div class="row" id="batchesGrid">
        <% batches.forEach(batch => { %>
            <div class="col-lg-6 mb-4">
                <div class="card batch-card <%= batch.type %>"
                     data-batch-type="<%= batch.type %>"
                     data-order-ids="<%= batch.orders.map(o => o._id).join(',') %>">

                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-start mb-3">
                            <div>
                                <div class="batch-icon"><%= batch.icon %></div>
                                <h4 class="mt-2"><%= batch.name %></h4>
                            </div>
                            <span class="badge bg-<%= batch.color %> fs-6">
                                <%= batch.orders.length %> Aufträge
                            </span>
                        </div>

                        <div class="batch-stats">
                            <div class="stat-item">
                                <div class="stat-value"><%= batch.consolidatedItems.length %></div>
                                <div class="stat-label">Positionen</div>
                            </div>
                            <div class="stat-item">
                                <div class="stat-value"><%= batch.estimatedTime %></div>
                                <div class="stat-label">Min. geschätzt</div>
                            </div>
                            <div class="stat-item">
                                <div class="stat-value">
                                    <%= batch.consolidatedItems.reduce((sum, item) => sum + item.totalQuantity, 0) %>
                                </div>
                                <div class="stat-label">Artikel gesamt</div>
                            </div>
                            <div class="stat-item">
                                <div class="stat-value">
                                    <%= [...new Set(batch.consolidatedItems.map(i => i.location))].length %>
                                </div>
                                <div class="stat-label">Lagerplätze</div>
                            </div>
                        </div>

                        <% if (batch.type === 'express') { %>
                            <div class="alert alert-danger mt-3 mb-0">
                                <i class="fas fa-clock"></i>
                                Eilaufträge - Versand bis 14:00 Uhr!
                            </div>
                        <% } %>

                        <div class="order-preview">
                            <strong>Enthaltene Aufträge:</strong><br>
                            <% batch.orders.slice(0, 5).forEach(order => { %>
                                <small>
                                    • <%= order.deliveryNoteNumber %>
                                    <% if (order.customer && order.customer.name) { %>
                                        - <%= order.customer.name %>
                                    <% } %>
                                </small><br>
                            <% }) %>
                            <% if (batch.orders.length > 5) { %>
                                <small class="text-muted">... und <%= batch.orders.length - 5 %> weitere</small>
                            <% } %>
                        </div>

                        <div class="mt-3 d-grid">
                            <button class="btn btn-<%= batch.color %> btn-lg start-batch-btn"
                                    data-batch-type="<%= batch.type %>"
                                    data-order-ids="<%= batch.orders.map(o => o._id).join(',') %>">
                                <i class="fas fa-play-circle"></i> Batch starten
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        <% }) %>

        <% if (batches.length === 0) { %>
            <div class="col-12">
                <div class="card">
                    <div class="card-body text-center py-5">
                        <i class="fas fa-inbox fa-4x text-muted mb-3"></i>
                        <h4>Keine offenen Aufträge</h4>
                        <p class="text-muted">Alle Aufträge sind bereits in Bearbeitung oder abgeschlossen.</p>
                        <a href="/orders/sync" class="btn btn-primary">
                            <i class="fas fa-sync"></i> Mit No Border synchronisieren
                        </a>
                    </div>
                </div>
            </div>
        <% } %>
    </div>

    <!-- Floating Action Button -->
    <button class="create-batch-btn" onclick="showBatchWizard()" title="Eigenes Batch erstellen">
        <i class="fas fa-plus"></i>
    </button>
</div>

<!-- Batch Start Modal -->
<div class="modal fade" id="batchStartModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title">
                    <i class="fas fa-rocket"></i> Batch-Kommissionierung starten
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div id="batchSummary"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Abbrechen</button>
                <button type="button" class="btn btn-primary" id="confirmBatchStart">
                    <i class="fas fa-play"></i> Jetzt starten
                </button>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
    let selectionMode = false;
    let selectedOrders = new Set();
    let pendingBatchData = null;

    // Batch starten Button Click Handler
    document.querySelectorAll('.start-batch-btn').forEach(btn => {
        btn.addEventListener('click', function(e) {
            e.stopPropagation();
            const batchType = this.dataset.batchType;
            const orderIds = this.dataset.orderIds.split(',');
            showBatchConfirmation(batchType, orderIds);
        });
    });

    // Karten-Click Handler für Auswahl-Modus
    document.querySelectorAll('.batch-card').forEach(card => {
        card.addEventListener('click', function() {
            if (selectionMode) {
                const orderIds = this.dataset.orderIds.split(',');
                orderIds.forEach(id => {
                    if (selectedOrders.has(id)) {
                        selectedOrders.delete(id);
                    } else {
                        selectedOrders.add(id);
                    }
                });
                this.classList.toggle('selected');
                updateSelectionCount();
            }
        });
    });

    function toggleSelectionMode() {
        selectionMode = !selectionMode;
        document.getElementById('selectionMode').classList.toggle('active', selectionMode);

        if (!selectionMode) {
            cancelSelection();
        }
    }

    function cancelSelection() {
        selectionMode = false;
        selectedOrders.clear();
        document.querySelectorAll('.batch-card.selected').forEach(card => {
            card.classList.remove('selected');
        });
        document.getElementById('selectionMode').classList.remove('active');
    }

    function updateSelectionCount() {
        document.getElementById('selectedCount').textContent = selectedOrders.size;
    }

    function createCustomBatch() {
        if (selectedOrders.size === 0) {
            alert('Bitte wählen Sie mindestens einen Auftrag aus.');
            return;
        }

        showBatchConfirmation('custom', Array.from(selectedOrders));
    }

    function showBatchConfirmation(batchType, orderIds) {
        pendingBatchData = { batchType, orderIds };

        // Lade Batch-Details
        const batchCard = document.querySelector(`.batch-card.${batchType}`);
        const batchName = batchType === 'custom' ? 'Benutzerdefiniertes Batch' :
            batchCard?.querySelector('h4').textContent || 'Batch';

        const summaryHtml = `
            <div class="text-center mb-4">
                <div class="batch-icon" style="font-size: 4rem;">
                    ${batchType === 'express' ? '🚀' :
            batchType === 'singleItem' ? '📦' :
                batchType === 'multiItem' ? '📋' :
                    batchType === 'bulky' ? '🏗️' : '📦'}
                </div>
                <h4>${batchName}</h4>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <p><strong>Anzahl Aufträge:</strong> ${orderIds.length}</p>
                    <p><strong>Batch-Typ:</strong> ${batchType}</p>
                </div>
                <div class="col-md-6">
                    <p><strong>Kommissionierer:</strong> <%= user.name %></p>
                    <p><strong>Startzeit:</strong> ${new Date().toLocaleTimeString('de-DE')}</p>
                </div>
            </div>
            <div class="alert alert-info">
                <i class="fas fa-info-circle"></i>
                Nach dem Start werden alle Aufträge auf "In Bearbeitung" gesetzt und Ihnen zugewiesen.
            </div>
        `;

        document.getElementById('batchSummary').innerHTML = summaryHtml;

        const modal = new bootstrap.Modal(document.getElementById('batchStartModal'));
        modal.show();
    }

    document.getElementById('confirmBatchStart').addEventListener('click', async function() {
        if (!pendingBatchData) return;

        this.disabled = true;
        this.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Wird gestartet...';

        try {
            const response = await fetch('/orders/create-batch', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(pendingBatchData)
            });

            const result = await response.json();

            if (result.success) {
                // Weiterleitung zum Batch-Picking
                window.location.href = `/orders/batch/${result.batchId}`;
            } else {
                alert('Fehler: ' + (result.error || 'Unbekannter Fehler'));
                this.disabled = false;
                this.innerHTML = '<i class="fas fa-play"></i> Jetzt starten';
            }
        } catch (error) {
            console.error('Fehler beim Starten des Batches:', error);
            alert('Fehler beim Starten des Batches');
            this.disabled = false;
            this.innerHTML = '<i class="fas fa-play"></i> Jetzt starten';
        }
    });

    function showBatchWizard() {
        alert('Batch-Wizard kommt bald! Nutzen Sie vorerst den Auswahl-Modus.');
        toggleSelectionMode();
    }

    // Auto-Refresh alle 30 Sekunden
    setInterval(() => {
        if (!selectionMode && !document.querySelector('.modal.show')) {
            location.reload();
        }
    }, 30000);

    // Keyboard Shortcuts
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
            cancelSelection();
        }

        if (e.ctrlKey && e.key === 'a' && selectionMode) {
            e.preventDefault();
            document.querySelectorAll('.batch-card').forEach(card => {
                card.classList.add('selected');
                const orderIds = card.dataset.orderIds.split(',');
                orderIds.forEach(id => selectedOrders.add(id));
            });
            updateSelectionCount();
        }
    });
</script>
</body>
</html>