<!DOCTYPE html>
<html lang="de">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> | Kommissionier-App</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="/css/styles.css">
    <style>
        .batch-stage {
            display: none;
        }

        .batch-stage.active {
            display: block;
        }

        .stage-progress {
            position: sticky;
            top: 0;
            z-index: 100;
            background: white;
            padding: 1rem 0;
            margin-bottom: 2rem;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }

        .progress-steps {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-bottom: 1rem;
        }

        .progress-step {
            display: flex;
            align-items: center;
            padding: 0.5rem 1rem;
            border-radius: 25px;
            margin: 0 0.5rem;
            transition: all 0.3s;
        }

        .progress-step.completed {
            background: #28a745;
            color: white;
        }

        .progress-step.active {
            background: #0d6efd;
            color: white;
        }

        .progress-step.inactive {
            background: #f8f9fa;
            color: #6c757d;
        }

        /* Selection Stage Styles */
        .batch-card {
            border-radius: 15px;
            transition: all 0.3s ease;
            cursor: pointer;
            overflow: hidden;
            margin-bottom: 1.5rem;
            border: 2px solid #e9ecef;
        }

        .batch-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 30px rgba(0,0,0,0.15);
            border-color: #0d6efd;
        }

        .batch-card.express {
            border-left: 5px solid #dc3545;
        }

        .batch-stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
            gap: 10px;
            margin-top: 15px;
        }

        .stat-item {
            background: #f8f9fa;
            padding: 10px;
            border-radius: 8px;
            text-align: center;
        }

        .stat-value {
            font-size: 1.5rem;
            font-weight: bold;
            color: #333;
        }

        /* Picking Stage Styles */
        .location-display {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 40px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 10px 30px rgba(102, 126, 234, 0.3);
            margin-bottom: 2rem;
        }

        .location-code {
            font-size: 4rem;
            font-weight: 700;
            letter-spacing: 3px;
            margin-bottom: 1rem;
        }

        .scan-input-container {
            background: white;
            border-radius: 15px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            margin-bottom: 20px;
        }

        .scan-input {
            font-size: 1.5rem;
            text-align: center;
            border: 3px solid #dee2e6;
            border-radius: 10px;
            padding: 15px;
            transition: all 0.3s;
        }

        .scan-input:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
        }

        .scan-input.success {
            border-color: #28a745;
            animation: pulse-success 0.5s;
        }

        .scan-input.error {
            border-color: #dc3545;
            animation: shake 0.5s;
        }

        .item-card {
            background: white;
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            margin-bottom: 20px;
        }

        .quantity-picker {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 20px;
            margin: 30px 0;
        }

        .qty-button {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            border: none;
            background: #e9ecef;
            font-size: 1.5rem;
            cursor: pointer;
            transition: all 0.3s;
        }

        .qty-display {
            font-size: 3rem;
            font-weight: 700;
            min-width: 100px;
            text-align: center;
        }

        .batch-info-sidebar {
            position: sticky;
            top: 100px;
        }

        .timer {
            font-size: 2rem;
            font-weight: 700;
            color: #667eea;
            text-align: center;
            margin: 20px 0;
        }

        @keyframes pulse-success {
            0% { transform: scale(1); }
            50% { transform: scale(1.05); }
            100% { transform: scale(1); }
        }

        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            25% { transform: translateX(-10px); }
            75% { transform: translateX(10px); }
        }

        /* Complete Stage Styles */
        .completion-celebration {
            text-align: center;
            padding: 60px 20px;
        }

        .celebration-icon {
            font-size: 5rem;
            color: #28a745;
            margin-bottom: 2rem;
            animation: bounce 2s infinite;
        }

        @keyframes bounce {
            0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
            40% { transform: translateY(-30px); }
            60% { transform: translateY(-15px); }
        }
    </style>
</head>
<body>
<%- include('../partials/navbar') %>

<div class="container-fluid">
    <!-- Progress Header -->
    <div class="stage-progress">
        <div class="progress-steps">
            <div class="progress-step <%= stage === 'selection' ? 'active' : stage === 'picking' || stage === 'complete' ? 'completed' : 'inactive' %>">
                <i class="fas fa-list me-2"></i> Auswahl
            </div>
            <div class="progress-step <%= stage === 'picking' ? 'active' : stage === 'complete' ? 'completed' : 'inactive' %>">
                <i class="fas fa-barcode me-2"></i> Kommissionierung
            </div>
            <div class="progress-step <%= stage === 'complete' ? 'active' : 'inactive' %>">
                <i class="fas fa-check me-2"></i> Abschluss
            </div>
        </div>

        <% if (batch && batch.id) { %>
            <div class="text-center">
                <h4>Batch <%= batch.id %> - <%= batch.type %></h4>
                <% if (stage === 'picking') { %>
                    <div class="progress" style="height: 20px;">
                        <div class="progress-bar progress-bar-striped progress-bar-animated"
                             style="width: <%= progress %>%">
                            <%= progress %>% - Position <%= batch.currentItemIndex + 1 %> von <%= batch.items.length %>
                        </div>
                    </div>
                <% } %>
            </div>
        <% } %>
    </div>

    <!-- SELECTION STAGE -->
    <div id="selectionStage" class="batch-stage <%= stage === 'selection' ? 'active' : '' %>">
        <div class="container">
            <div class="row mb-4">
                <div class="col-12">
                    <div class="d-flex justify-content-between align-items-center">
                        <h2><i class="fas fa-layer-group"></i> Batch-Picking Setup</h2>
                        <a href="/orders" class="btn btn-outline-secondary">
                            <i class="fas fa-arrow-left"></i> Zurück
                        </a>
                    </div>
                </div>
            </div>

            <!-- Quick Stats -->
            <div class="row mb-4">
                <div class="col-md-3">
                    <div class="card text-center">
                        <div class="card-body">
                            <h3 class="text-primary"><%= stats.totalOrders %></h3>
                            <p class="mb-0">Offene Aufträge</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-center">
                        <div class="card-body">
                            <h3 class="text-danger"><%= stats.expressOrders %></h3>
                            <p class="mb-0">Express-Aufträge</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-center">
                        <div class="card-body">
                            <h3 class="text-warning"><%= stats.totalItems %></h3>
                            <p class="mb-0">Artikel gesamt</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-center">
                        <div class="card-body">
                            <h3 class="text-info"><%= Math.ceil(stats.estimatedTime / 60) %>h</h3>
                            <p class="mb-0">Geschätzte Zeit</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Batch Options -->
            <div class="row">
                <% if (batches && batches.length > 0) { %>
                    <% batches.forEach(batch => { %>
                        <div class="col-lg-6 mb-4">
                            <div class="card batch-card <%= batch.type %>"
                                 onclick="startBatch('<%= batch.type %>', '<%= batch.orders.map(o => o._id).join(',') %>')">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-start mb-3">
                                        <div>
                                            <h4><%= batch.icon %> <%= batch.name %></h4>
                                            <p class="text-muted"><%= batch.description %></p>
                                        </div>
                                        <span class="badge bg-<%= batch.color %> fs-6">
                                            <%= batch.orders.length %> Aufträge
                                        </span>
                                    </div>

                                    <div class="batch-stats">
                                        <div class="stat-item">
                                            <div class="stat-value"><%= batch.consolidatedItems.length %></div>
                                            <div class="stat-label">Positionen</div>
                                        </div>
                                        <div class="stat-item">
                                            <div class="stat-value"><%= batch.estimatedTime %></div>
                                            <div class="stat-label">Min. geschätzt</div>
                                        </div>
                                        <div class="stat-item">
                                            <div class="stat-value">
                                                <%= batch.consolidatedItems.reduce((sum, item) => sum + item.totalQuantity, 0) %>
                                            </div>
                                            <div class="stat-label">Artikel gesamt</div>
                                        </div>
                                        <div class="stat-item">
                                            <div class="stat-value">
                                                <%= [...new Set(batch.consolidatedItems.map(i => i.location))].length %>
                                            </div>
                                            <div class="stat-label">Lagerplätze</div>
                                        </div>
                                    </div>

                                    <% if (batch.type === 'express') { %>
                                        <div class="alert alert-danger mt-3 mb-0">
                                            <i class="fas fa-clock"></i>
                                            Eilaufträge - Versand bis 14:00 Uhr!
                                        </div>
                                    <% } %>

                                    <div class="mt-3 d-grid">
                                        <button class="btn btn-<%= batch.color %> btn-lg">
                                            <i class="fas fa-play-circle"></i> Batch starten
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    <% }) %>
                <% } else { %>
                    <div class="col-12">
                        <div class="card">
                            <div class="card-body text-center py-5">
                                <i class="fas fa-inbox fa-4x text-muted mb-3"></i>
                                <h4>Keine Aufträge für Batch-Picking verfügbar</h4>
                                <p class="text-muted">Alle Aufträge sind bereits in Bearbeitung oder abgeschlossen.</p>
                                <a href="/orders/sync" class="btn btn-primary">
                                    <i class="fas fa-sync"></i> Synchronisieren
                                </a>
                            </div>
                        </div>
                    </div>
                <% } %>
            </div>
        </div>
    </div>

    <!-- PICKING STAGE -->
    <div id="pickingStage" class="batch-stage <%= stage === 'picking' ? 'active' : '' %>">
        <div class="container-fluid">
            <div class="row">
                <!-- Main Picking Area -->
                <div class="col-lg-8">
                    <!-- Scanner Input -->
                    <div class="scan-input-container">
                        <label class="form-label text-center d-block mb-3">
                            <i class="fas fa-barcode"></i> Barcode scannen oder manuell eingeben
                        </label>
                        <input type="text"
                               id="scanInput"
                               class="form-control scan-input"
                               placeholder="Bereit zum Scannen..."
                               autofocus>
                    </div>

                    <% if (currentItem) { %>
                        <!-- Location Display -->
                        <div class="location-display">
                            <div class="location-code">
                                <%= currentItem.location %>
                            </div>
                            <p class="mb-0 fs-5">Lagerplatz</p>
                        </div>

                        <!-- Item Details -->
                        <div class="item-card">
                            <div class="row">
                                <div class="col-md-3 text-center">
                                    <div class="item-image mb-3">
                                        <i class="fas fa-box fa-4x text-muted"></i>
                                    </div>
                                </div>
                                <div class="col-md-9">
                                    <h3><%= currentItem.sku %></h3>
                                    <p class="fs-5 mb-3"><%= currentItem.description %></p>

                                    <div class="d-flex gap-4 mb-3">
                                        <div>
                                            <small class="text-muted">Artikelnummer</small>
                                            <div class="fw-bold"><%= currentItem.articleNumber %></div>
                                        </div>
                                        <div>
                                            <small class="text-muted">Einheit</small>
                                            <div class="fw-bold"><%= currentItem.unit %></div>
                                        </div>
                                        <div>
                                            <small class="text-muted">Gewicht</small>
                                            <div class="fw-bold"><%= currentItem.weight || '0.5' %> kg</div>
                                        </div>
                                    </div>

                                    <!-- Quantity Picker -->
                                    <div class="quantity-picker">
                                        <button class="qty-button" onclick="decreaseQty()">
                                            <i class="fas fa-minus"></i>
                                        </button>
                                        <div class="qty-display" id="qtyDisplay">
                                            <%= currentItem.totalQuantity %>
                                        </div>
                                        <button class="qty-button" onclick="increaseQty()">
                                            <i class="fas fa-plus"></i>
                                        </button>
                                    </div>

                                    <div class="text-center mb-3">
                                        <div class="badge bg-primary fs-6">
                                            Gesamt benötigt: <%= currentItem.totalQuantity %> <%= currentItem.unit %>
                                        </div>
                                    </div>

                                    <!-- Order Breakdown -->
                                    <div class="order-breakdown bg-light p-3 rounded">
                                        <h6 class="mb-3">Aufteilung auf Aufträge:</h6>
                                        <% currentItem.orderBreakdown.forEach(order => { %>
                                            <div class="d-flex justify-content-between align-items-center py-2 border-bottom">
                                                <div>
                                                    <strong>LS <%= order.deliveryNote %></strong>
                                                    <% if (order.customer) { %>
                                                        <br><small class="text-muted"><%= order.customer %></small>
                                                    <% } %>
                                                </div>
                                                <div class="badge bg-secondary">
                                                    <%= order.quantity %> <%= currentItem.unit %>
                                                </div>
                                            </div>
                                        <% }) %>
                                    </div>

                                    <!-- Action Buttons -->
                                    <div class="d-grid gap-2 d-md-flex mt-4">
                                        <button class="btn btn-success btn-lg flex-fill" onclick="confirmPick()">
                                            <i class="fas fa-check"></i> Bestätigen
                                        </button>
                                        <button class="btn btn-warning btn-lg flex-fill" onclick="skipItem()">
                                            <i class="fas fa-forward"></i> Überspringen
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    <% } %>
                </div>

                <!-- Sidebar with Batch Info -->
                <div class="col-lg-4">
                    <div class="batch-info-sidebar">
                        <!-- Timer -->
                        <div class="card mb-3">
                            <div class="card-body text-center">
                                <h5 class="card-title">Zeit</h5>
                                <div class="timer" id="timer">00:00</div>
                            </div>
                        </div>

                        <!-- Batch Info -->
                        <div class="card mb-3">
                            <div class="card-header">
                                <h6 class="mb-0">
                                    <i class="fas fa-info-circle"></i> Batch-Informationen
                                </h6>
                            </div>
                            <div class="card-body">
                                <table class="table table-sm table-borderless">
                                    <tr>
                                        <td>Batch-ID:</td>
                                        <td class="fw-bold"><%= batch.id %></td>
                                    </tr>
                                    <tr>
                                        <td>Typ:</td>
                                        <td class="fw-bold"><%= batch.type %></td>
                                    </tr>
                                    <tr>
                                        <td>Aufträge:</td>
                                        <td class="fw-bold"><%= batch.totalOrders %></td>
                                    </tr>
                                    <tr>
                                        <td>Artikel gesamt:</td>
                                        <td class="fw-bold"><%= batch.totalItems %></td>
                                    </tr>
                                    <tr>
                                        <td>Kommissionierer:</td>
                                        <td class="fw-bold"><%= user.name %></td>
                                    </tr>
                                </table>

                                <div class="d-grid mt-3">
                                    <button class="btn btn-outline-danger btn-sm" onclick="pauseBatch()">
                                        <i class="fas fa-pause"></i> Pausieren
                                    </button>
                                </div>
                            </div>
                        </div>

                        <!-- Items Timeline -->
                        <div class="card">
                            <div class="card-header">
                                <h6 class="mb-0">
                                    <i class="fas fa-tasks"></i> Fortschritt
                                </h6>
                            </div>
                            <div class="card-body">
                                <div class="timeline">
                                    <% if (batch.items) { %>
                                        <% batch.items.forEach((item, index) => { %>
                                            <div class="timeline-item <%= index < batch.currentItemIndex ? 'completed' : '' %> <%= index === batch.currentItemIndex ? 'current' : '' %>"
                                                 onclick="jumpToItem(<%= index %>)">
                                                <div class="d-flex justify-content-between align-items-center">
                                                    <div>
                                                        <strong><%= item.location %></strong>
                                                        <br>
                                                        <small><%= item.sku %></small>
                                                        <br>
                                                        <small><%= item.totalQuantity %> <%= item.unit %></small>
                                                    </div>
                                                    <div>
                                                        <% if (index < batch.currentItemIndex) { %>
                                                            <i class="fas fa-check-circle text-success"></i>
                                                        <% } else if (index === batch.currentItemIndex) { %>
                                                            <i class="fas fa-arrow-right text-primary"></i>
                                                        <% } %>
                                                    </div>
                                                </div>
                                            </div>
                                        <% }) %>
                                    <% } %>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- COMPLETION STAGE -->
    <div id="completeStage" class="batch-stage <%= stage === 'complete' ? 'active' : '' %>">
        <div class="container">
            <div class="completion-celebration">
                <div class="celebration-icon">
                    <i class="fas fa-trophy"></i>
                </div>
                <h1 class="display-4 mb-4">Batch erfolgreich abgeschlossen!</h1>

                <% if (performance) { %>
                    <div class="row justify-content-center mb-5">
                        <div class="col-md-8">
                            <div class="card">
                                <div class="card-body">
                                    <h4 class="card-title">Performance-Zusammenfassung</h4>
                                    <div class="row text-center">
                                        <div class="col-md-3">
                                            <h3 class="text-primary"><%= performance.itemCount %></h3>
                                            <p class="mb-0">Artikel kommissioniert</p>
                                        </div>
                                        <div class="col-md-3">
                                            <h3 class="text-success"><%= Math.round(performance.duration / 60000) %></h3>
                                            <p class="mb-0">Minuten benötigt</p>
                                        </div>
                                        <div class="col-md-3">
                                            <h3 class="text-info"><%= Math.round(performance.itemsPerHour) %></h3>
                                            <p class="mb-0">Artikel/Stunde</p>
                                        </div>
                                        <div class="col-md-3">
                                            <h3 class="text-warning"><%= performance.efficiency %>%</h3>
                                            <p class="mb-0">Effizienz</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                <% } %>

                <div class="d-flex gap-3 justify-content-center">
                    <a href="/orders/batch" class="btn btn-primary btn-lg">
                        <i class="fas fa-layer-group"></i> Neues Batch starten
                    </a>
                    <a href="/orders" class="btn btn-outline-primary btn-lg">
                        <i class="fas fa-list"></i> Zur Auftragsliste
                    </a>
                    <a href="/dashboard" class="btn btn-outline-secondary btn-lg">
                        <i class="fas fa-home"></i> Zum Dashboard
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Audio Elements -->
<audio id="scanSuccessSound" preload="auto">
    <source src="data:audio/wav;base64,UklGRnoGAABXQVZFZm10IBAAAAABAAEARKwAAIhYAQABAAgAZGF0YQAAAAAA" type="audio/wav">
</audio>
<audio id="scanErrorSound" preload="auto">
    <source src="data:audio/wav;base64,UklGRnoGAABXQVZFZm10IBAAAAABAAEARKwAAIhYAQABAAgAZGF0YQAAAAAA" type="audio/wav">
</audio>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
    const batchId = '<%= batch && batch.id ? batch.id : "" %>';
    const currentStage = '<%= stage %>';
    let currentQuantity = <%= currentItem ? currentItem.totalQuantity : 0 %>;
    let startTime = new Date('<%= batch && batch.startTime ? batch.startTime : new Date() %>');
    let timerInterval;

    // Initialize based on stage
    document.addEventListener('DOMContentLoaded', function() {
        if (currentStage === 'picking') {
            initializePicking();
        }
    });

    // SELECTION STAGE FUNCTIONS
    function startBatch(batchType, orderIds) {
        if (!confirm('Möchten Sie dieses Batch jetzt starten?')) return;

        const form = document.createElement('form');
        form.method = 'POST';
        form.action = '/orders/batch/create';

        const typeInput = document.createElement('input');
        typeInput.type = 'hidden';
        typeInput.name = 'batchType';
        typeInput.value = batchType;

        const ordersInput = document.createElement('input');
        ordersInput.type = 'hidden';
        ordersInput.name = 'orderIds';
        ordersInput.value = orderIds;

        form.appendChild(typeInput);
        form.appendChild(ordersInput);
        document.body.appendChild(form);
        form.submit();
    }

    // PICKING STAGE FUNCTIONS
    function initializePicking() {
        startTimer();
        setupScanner();
        autoFocusInput();
    }

    function startTimer() {
        timerInterval = setInterval(updateTimer, 1000);
        updateTimer();
    }

    function updateTimer() {
        const now = new Date();
        const elapsed = Math.floor((now - startTime) / 1000);
        const minutes = Math.floor(elapsed / 60);
        const seconds = elapsed % 60;
        const timerElement = document.getElementById('timer');
        if (timerElement) {
            timerElement.textContent =
                `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
        }
    }

    function setupScanner() {
        const scanInput = document.getElementById('scanInput');
        if (!scanInput) return;

        scanInput.addEventListener('input', handleScanInput);
        scanInput.addEventListener('keypress', handleKeyPress);
    }

    function handleScanInput(e) {
        // Scanner input handling logic
    }

    function handleKeyPress(e) {
        if (e.key === 'Enter') {
            e.preventDefault();
            const code = e.target.value.trim();
            if (code) {
                processScan(code);
                e.target.value = '';
            }
        }
    }

    function processScan(code) {
        const scanInput = document.getElementById('scanInput');

        <% if (currentItem) { %>
        const expectedCodes = [
            '<%= currentItem.sku %>',
            '<%= currentItem.articleNumber %>',
            '<%= currentItem.barcode || "" %>',
            '<%= currentItem.ean || "" %>'
        ].filter(c => c);

        if (expectedCodes.some(expected =>
            code.toLowerCase() === expected.toLowerCase() ||
            code.includes(expected) ||
            expected.includes(code)
        )) {
            scanInput.classList.add('success');
            playSound('success');
            setTimeout(() => {
                confirmPick();
            }, 500);
        } else {
            scanInput.classList.add('error');
            playSound('error');
            showNotification('Falscher Artikel gescannt!', 'error');
        }

        setTimeout(() => {
            scanInput.classList.remove('success', 'error');
        }, 1000);
        <% } %>
    }

    function decreaseQty() {
        if (currentQuantity > 1) {
            currentQuantity--;
            updateQtyDisplay();
        }
    }

    function increaseQty() {
        currentQuantity++;
        updateQtyDisplay();
    }

    function updateQtyDisplay() {
        const qtyElement = document.getElementById('qtyDisplay');
        if (qtyElement) {
            qtyElement.textContent = currentQuantity;
        }
    }

    async function confirmPick() {
        if (!batchId) return;

        try {
            const response = await fetch(`/orders/batch/${batchId}/pick`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    quantity: currentQuantity,
                    itemIndex: <%= batch && batch.currentItemIndex ? batch.currentItemIndex : 0 %>
                })
            });

            const result = await response.json();

            if (result.success) {
                showNotification('Artikel kommissioniert!', 'success');

                if (result.isComplete) {
                    // Switch to completion stage
                    setTimeout(() => {
                        window.location.href = `/orders/batch/${batchId}?stage=complete`;
                    }, 1000);
                } else {
                    // Next item
                    setTimeout(() => {
                        location.reload();
                    }, 1000);
                }
            } else {
                showNotification('Fehler: ' + result.error, 'error');
            }
        } catch (error) {
            console.error('Fehler:', error);
            showNotification('Verbindungsfehler', 'error');
        }
    }

    function skipItem() {
        if (confirm('Artikel wirklich überspringen?')) {
            location.reload();
        }
    }

    function pauseBatch() {
        if (confirm('Batch pausieren und später fortsetzen?')) {
            window.location.href = '/orders/batch';
        }
    }

    function jumpToItem(index) {
        // Only allow jumping to already processed items
        if (index < <%= batch && batch.currentItemIndex ? batch.currentItemIndex : 0 %>) {
            window.location.href = `/orders/batch/${batchId}?item=${index}`;
        }
    }

    function autoFocusInput() {
        const scanInput = document.getElementById('scanInput');
        if (scanInput) {
            scanInput.focus();

            setInterval(() => {
                if (document.activeElement !== scanInput && !document.querySelector('.modal.show')) {
                    scanInput.focus();
                }
            }, 2000);
        }
    }

    // UTILITY FUNCTIONS
    function playSound(type) {
        const audio = document.getElementById(type === 'success' ? 'scanSuccessSound' : 'scanErrorSound');
        if (audio) {
            audio.currentTime = 0;
            audio.play().catch(() => {});
        }
    }

    function showNotification(message, type) {
        const alertClass = type === 'success' ? 'alert-success' : 'alert-danger';
        const icon = type === 'success' ? 'check-circle' : 'exclamation-circle';

        const notification = document.createElement('div');
        notification.className = `alert ${alertClass} position-fixed top-0 start-50 translate-middle-x mt-3`;
        notification.style.zIndex = '9999';
        notification.innerHTML = `<i class="fas fa-${icon}"></i> ${message}`;

        document.body.appendChild(notification);

        setTimeout(() => {
            notification.remove();
        }, 3000);
    }

    // Keyboard shortcuts
    document.addEventListener('keydown', function(e) {
        if (currentStage === 'picking') {
            if (e.key === 'Enter' && e.ctrlKey) {
                e.preventDefault();
                confirmPick();
            }

            if (e.key === 'F9') {
                e.preventDefault();
                skipItem();
            }

            if (e.key === '+' && !e.target.matches('input')) {
                e.preventDefault();
                increaseQty();
            }

            if (e.key === '-' && !e.target.matches('input')) {
                e.preventDefault();
                decreaseQty();
            }
        }
    });
</script>
</body>
</html>